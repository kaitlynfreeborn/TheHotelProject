@model KL_Hotel.Models.Customer

@{
    ViewBag.Title = "SignUp";
}

<body style="background-color:aliceblue;">
    <h2 align="center"><b>Sign Up</b></h2>
</body>

<div class="container" align="center">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h3>Your Customer ID will be created for you, just enter the information below to create an account.</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign Up" class="btn btn-default" />
            </div>
        </div>
        <div style="padding-left:6em;">
            @Html.ActionLink("Already have an account? Log In", "LogIn")
        </div>
    }
</div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

